<!--
    IMPORTANT:
    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.
    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.
    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.
    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.
    - To remove a policy, delete the corresponding policy statement from the policy document.
    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.
    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.
    - Policies are applied in the order of their appearance, from the top down.
    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.
-->
<policies>
	<inbound>
		<base />
	</inbound>
	<backend>
		<base />
	</backend>
	<outbound>
		<base />
		<choose>
			<when condition="@(context.Response.StatusCode == 200)">
				<send-one-way-request mode="new">
					<set-url>https://microsoft.webhook.office.com/webhookb2/2fa1f66a-ecb9-4cdf-b170-4865bf426b46@72f988bf-86f1-41af-91ab-2d7cd011db47/IncomingWebhook/c483c7d9ecea48ebb11895741a82547c/9b4d5892-2a08-4ff7-992b-b5318e37e64f</set-url>
					<set-method>POST</set-method>
					<set-body>@{
        return new JObject(
            new JProperty("@type","MessageCard"),
            new JProperty("@context", "http://schema.org/extensions"),
            new JProperty("summary","Summary"),
            new JProperty("themeColor", "0075FF"),
            new JProperty("sections",
            new JArray (
                new JObject (
                new JProperty("text", "Hello!")
                )
            )
            )
        ).ToString();
        }</set-body>
				</send-one-way-request>
			</when>
		</choose>
	</outbound>
	<on-error>
		<base />
	</on-error>
</policies>